<web-app id="WebApp_ID" version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>Restful Web Application</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.deedef.security.DeedefApiListener</listener-class>
    </listener>
    <!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
    <!--<filter-mapping>-->
        <!--<filter-name>deedefCorsFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
    <!-- requests.  Usually this filter mapping is defined first (before all others) to -->
    <!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>jersey-serlvet</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.deedef.sms,com.deedef.dao,com.deedef.bean,com.deedef.security,com.deedef.service,com.deedef.Constante</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--<init-param>-->
            <!--<param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>-->
            <!--<param-value>com.aits.deedef.api.security.RequestInjectionFilter</param-value>-->
        <!--</init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>


    <!--<servlet>-->
        <!--<servlet-name>JerseyJaxrsConfig</servlet-name>-->
        <!--<servlet-class>com.wordnik.swagger.jersey.config.JerseyJaxrsConfig</servlet-class>-->
        <!--<init-param>-->
            <!--<param-name>api.version</param-name>-->
            <!--<param-value>1.0.0</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>swagger.api.basepath</param-name>-->
            <!--<param-value>/deedef-api/api</param-value>-->
        <!--</init-param>-->
        <!--<load-on-startup>2</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>Jersey</servlet-name>-->
        <!--<url-pattern>/api/*</url-pattern>-->
    <!--</servlet-mapping>-->
    <servlet-mapping>
        <servlet-name>jersey-serlvet</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>





</web-app>