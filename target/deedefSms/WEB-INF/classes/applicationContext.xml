<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">


 <import resource="persistence.xml"></import>


	<context:component-scan base-package="com.deedef.sms"/>

	<!--On met ici les DOA servant de manager, apres on les injectera dans les service-->
	<bean id="smsMgr" class="com.deedef.dao.Impl.SmsMgrImpl" />
	<!--<bean id="profilMgr" class="com.deedef.dao.Impl.ProfileMgrImpl"/>-->

	<bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"/>
     <bean id="dbRealm" class="com.deedef.security.DbRealm"/>
	<bean id="clientRealm" class="com.deedef.security.ClientRealm"/>
	<!-- Modular Authenticator -->
	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy" ref="authenticationStrategy"/>
		<property name="realms">
			<list>
				<ref local="dbRealm"/>
				<ref local="clientRealm"/>
			</list>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionMode" value="native"/>
		<!--<property name="cacheManager" ref="cacheManager"/>-->
		<property name="sessionManager.globalSessionTimeout" value="1000"/>
		<property name="sessionManager.sessionIdCookieEnabled" value="false"/>
		<property name="sessionManager.sessionIdCookie.path" value="/"/>
		<property name="sessionManager.sessionIdCookie.maxAge" value="86400"/>
		<property name="sessionManager.sessionIdCookie.version" value="1"/>
		<property name="sessionManager.sessionIdCookie.httpOnly" value="false"/>
		<property name="sessionManager.sessionIdCookie.secure" value="false"/>
		<property name="sessionManager.sessionIdCookie.comment" value="Cookie de session deedef"/>
		<property name="authenticator" ref="authenticator"/>
		<!--<property name="subjectDAO.sessionStorageEvaluator" ref="sessionStorageEvaluator"/>-->
	</bean>

	<!-- SHIRO FILTERS -->
	<bean id="deedefClientFilter" class="com.deedef.security.ClientAuthenticatingFilter"/>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<property name="filterChainDefinitions">
			<value>
				/api/login = anon
				/api/logout = anon
				/api/status = anon
				/api/authenticate = anon
				/api/sms/test = anon
				/api/isSessionValid=anon
				/api/** = noSessionCreation,deedefClientFilter
			</value>
		</property>
	</bean>
	<!-- Annotations processors for Shiro -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

</beans>